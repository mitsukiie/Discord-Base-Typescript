import { Events, MessageFlags } from 'discord.js';
import { createEvent } from '#builders';
import { logger } from '#utils';

// Evento: InteractionCreate
export default createEvent({
  // Nome do evento
  name: Events.InteractionCreate,

  // Fun√ß√£o executada quando a intera√ß√£o ocorre
  async run(interaction, client) {
    // Ignora intera√ß√µes que n√£o sejam comandos de chat (slash commands)
    if (!interaction.isChatInputCommand()) return;

    // Procura o comando registrado no client
    const command = client.commands.get(interaction.commandName);
    if (!command) {
      logger.error(`O comando ${interaction.commandName} n√£o foi encontrado.`);
      return;
    }

    try {
      // Tenta executar o comando
      await command.run(interaction, client);
    } catch (err) {
      // Se ocorrer erro, mostra no console
      console.error(err);

      // Responde √† intera√ß√£o de forma privada, dependendo se j√° foi respondida ou n√£o
      if (interaction.replied || interaction.deferred) {
        await interaction.followUp({
          content: 'üòì Desculpa, eu acabei trope√ßando aqui...\nTente de novo depois!',
          flags: [MessageFlags.Ephemeral], // resposta privada
        });
      } else {
        await interaction.reply({
          content: 'üòì Desculpa, eu acabei trope√ßando aqui...\nTente de novo depois!',
          flags: [MessageFlags.Ephemeral], // resposta privada
        });
      }
    }
  },
});
